{"version":3,"file":"main.js","mappings":";iMAAA,iBAEa,EAAAA,KAAQC,GACZ,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAM,IACPC,QAAQD,KAGPE,EAAI,UAAKC,MAAMP,EAAK,GAAIA,EAAKQ,MAAM,GAAI,CAC3CC,OAAO,EACPL,QAGFE,EAAEI,GAAG,SAAUC,IACbR,EAAOQ,MAGTL,EAAEI,GAAG,QAASE,IACZV,EAAQU,MAGVN,EAAEO,MAAMC,KAAKT,QAAQQ,OACrBP,EAAES,OAAOD,KAAKT,QAAQU,QACtBT,EAAEU,OAAOF,KAAKT,QAAQW,Y,yfCvB1B,a,uFCAA,eAEa,EAAAC,eAAiBC,MAAOlB,IAE5B,IAAAD,MAAK,CAAC,UAAWC,K,OCJ1BmB,EAAOC,QAAUC,QAAQ,mBCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUI,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAGpEJ,EAAOC,Q,MCnBf,eAEA,MAAaS,EACH7B,KACR8B,YAAY9B,GACV+B,KAAK/B,KAAOA,EAGPkB,YACL,MAAMlB,EAAO+B,KAAK/B,KAAKQ,MAAM,GAC7B,IAAKR,EAAKgC,OAER,OADAC,QAAQC,IAAI,aACL,EAET,GAAgB,eAAZlC,EAAK,GACP,OAAO,IAAAiB,gBAAejB,GAExB,MAAM,IAAImC,MAAM,oBAAoBnC,EAAKoC,KAAK,SAIlD,WACE,MAAMC,EAAU,IAAIR,EAAQxB,QAAQL,MACpC,UACQqC,EAAQC,MACdjC,QAAQkC,KAAK,GACb,MAAOC,GACHA,aAAaL,OACfF,QAAQQ,MAAMD,EAAEE,SAElBrC,QAAQkC,MAAM,KATlB,I","sources":["webpack://slydo/./src/exec/index.ts","webpack://slydo/./src/index.ts","webpack://slydo/./src/serverless/index.ts","webpack://slydo/external node-commonjs \"child_process\"","webpack://slydo/webpack/bootstrap","webpack://slydo/./cli/index.ts"],"sourcesContent":["import proc from 'child_process';\n\nexport const exec = (argv: string[]): Promise<number> => {\n  return new Promise((resolve, reject) => {\n    const env = {\n      ...process.env,\n    };\n\n    const p = proc.spawn(argv[0], argv.slice(1), {\n      shell: true,\n      env,\n    });\n\n    p.on('error', (err) => {\n      reject(err);\n    });\n\n    p.on('exit', (code) => {\n      resolve(code);\n    });\n\n    p.stdin.pipe(process.stdin);\n    p.stdout.pipe(process.stdout);\n    p.stderr.pipe(process.stderr);\n  });\n};\n","export * from './serverless';\n","import { exec } from '../exec';\n\nexport const serverlessExec = async (argv: string[]): Promise<number> => {\n  //TODO: Locate serverless binary\n  return exec(['yarn', ...argv]);\n};\n","module.exports = require(\"child_process\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","#!/usr/bin/env node\n\nimport { serverlessExec } from '../src';\n\nexport class Command {\n  private argv: string[];\n  constructor(argv: string[]) {\n    this.argv = argv;\n  }\n\n  public async run(): Promise<number> {\n    const argv = this.argv.slice(2);\n    if (!argv.length) {\n      console.log('TODO Help');\n      return 0;\n    }\n    if (argv[0] === 'serverless') {\n      return serverlessExec(argv);\n    }\n    throw new Error(`Unknown command: ${argv.join(' ')}`);\n  }\n}\n\n(async () => {\n  const command = new Command(process.argv);\n  try {\n    await command.run();\n    process.exit(0);\n  } catch (e) {\n    if (e instanceof Error) {\n      console.error(e.message);\n    }\n    process.exit(-1);\n  }\n})();\n"],"names":["exec","argv","Promise","resolve","reject","env","process","p","spawn","slice","shell","on","err","code","stdin","pipe","stdout","stderr","serverlessExec","async","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","Command","constructor","this","length","console","log","Error","join","command","run","exit","e","error","message"],"sourceRoot":""}